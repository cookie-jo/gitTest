package com.model;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

public class MemberDAO {

	Connection conn = null;
	PreparedStatement psmt = null;
	int cnt = 0;
	String name = null;
	ResultSet rs = null;

	public void conn() {

		try {

			Class.forName("oracle.jdbc.driver.OracleDriver");

			String db_url = "jdbc:oracle:thin:@localhost:1521:xe";
			String db_id = "hr";
			String db_pw = "hr";

			conn = DriverManager.getConnection(db_url, db_id, db_pw);

		} catch (ClassNotFoundException e) {
			e.printStackTrace();
		} catch (SQLException e) {
			e.printStackTrace();
		}

	}

	public void close() {
		// if문 먼저쓰든 try문 먼저쓰든 순서는 상관없음. 해석해보면
		// try시도해라 psmt가 null이 아니라면 닫아라. 에러가난다면 catch문으로 빠져라
		// 하나의 try-catch문으로 훨씬 깔끔하고 가독성 좋은 코드를 완성할 수 있음.
		try {
			if (rs != null) {
				rs.close();
			}
			if (psmt != null) {
				psmt.close();
			}

			if (conn != null) {
				conn.close();
			}
		} catch (SQLException e) {
			e.printStackTrace();
		}
	}

	public int join(String id, String pw, String name) { // 메서드는 약속을 하는 것.

		conn();

		try {
			String sql = "insert into member values(?,?,?)";
			psmt = conn.prepareStatement(sql);
			psmt.setString(1, id);
			psmt.setString(2, pw);
			psmt.setString(3, name);

			cnt = psmt.executeUpdate();
		} catch (SQLException e) {
			e.printStackTrace();
		} finally {
			close();
		}
		return cnt;
	}

	public String login(String id, String pw) {
		conn();
		try {
			String sql = "select * from member where id = ? and pw = ?";
			psmt = conn.prepareStatement(sql);
			psmt.setString(1, id);
			psmt.setString(2, pw);

			rs = psmt.executeQuery();
			if (rs.next()) {
				name = rs.getString("name"); /* 괄호 안에는 컬럼명 또는 name인덱스값 3을 입력해주면 됨 */

			}
		} catch (SQLException e) {
			e.printStackTrace();
		}finally{
			close();
		}
		
		return name;
	}
}
